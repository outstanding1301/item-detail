{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","edit","updateEdit","title","setTitle","images","setImages","itemName","setItemName","itemColor","setItemColor","itemSize","setItemSize","itemFabric","setItemFabric","toggleEdit","onDonwload","a","window","scrollTo","html2canvas","document","getElementsByClassName","allowTaint","useCORS","letterRendering","scrollX","scrollY","scale","canvas","img","toDataURL","element","createElement","href","download","body","appendChild","click","onDragEnter","event","preventDefault","onDragLeave","onDragOver","onDrop","onDropTitle","file","dataTransfer","files","indexOf","type","reader","FileReader","onload","e","target","result","readAsDataURL","alert","onDropImages","supportedFilesTypes","i","length","imgs","console","log","className","onClick","disabled","style","backgroundColor","marginTop","marginBottom","width","src","onChange","value","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","map","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b726b90.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport html2canvas from 'html2canvas';\nimport './App.css';\n\nfunction App() {\n\n  const [edit, updateEdit] = useState(true);\n\n  const [title, setTitle] = useState(null);\n  const [images, setImages] = useState([]);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemColor, setItemColor] = useState(\"\");\n  const [itemSize, setItemSize] = useState(\"\");\n  const [itemFabric, setItemFabric] = useState(\"면, 혼방\");\n\n  const toggleEdit = () => {\n    updateEdit(!edit);\n  }\n\n\n  const onNameChange = (e) => {\n    setItemName(e.target.value);\n  }\n  const onColorChange = (e) => {\n    setItemColor(e.target.value);\n  }\n  const onSizeChange = (e) => {\n    setItemSize(e.target.value);\n  }\n  const onFabricChange = (e) => {\n    setItemFabric(e.target.value);\n  }\n\n  const onDeleteAll = () => {\n    setImages([]);\n  }\n\n  const onDonwload = async () => {\n    window.scrollTo(0,0);\n    const canvas = await html2canvas(document.getElementsByClassName('frame')[0]\n      , {\n        allowTaint: true\n        , useCORS: true\n        , letterRendering: 1\n        , scrollX: 0\n        , scrollY: 0\n        , scale: 1.0\n      })\n\n      const img = canvas.toDataURL('image/jpg');\n\n      const element = document.createElement(\"a\");\n      element.href = img;\n      element.download = 'detail.jpg';\n      document.body.appendChild(element);\n      element.click();\n  }\n\n  const addImage = (img) => {\n    setImages(imgs => [...imgs, img])\n    console.log(images);\n  }\n\n  const onDragEnter = (event) => {\n    event.preventDefault();\n  }\n\n  const onDragLeave = (event) => {\n    event.preventDefault();\n  }\n\n  const onDragOver = (event) => {\n    event.preventDefault();\n  }\n  \n  const onDrop = (event) => {\n    event.preventDefault();\n  }\n\n  const onDropTitle = (event) => {\n    if(edit) {\n      const supportedFilesTypes = ['image/jpeg', 'image/png'];\n      const files = event.dataTransfer.files;\n      const file = files[0];\n      if(supportedFilesTypes.indexOf(file.type) > -1) {\n        const reader = new FileReader();\n        reader.onload = e => setTitle(e.target.result);\n        reader.readAsDataURL(file);\n      }\n    }\n    else {\n      alert('수정 모드에서만 이미지를 등록할 수 있습니다.');\n    }\n    event.preventDefault();\n  }\n\n  const onDropImages = (event) => {\n    if(edit) {\n      const supportedFilesTypes = ['image/jpeg', 'image/png'];\n      const files = event.dataTransfer.files;\n      for (let i=0;i<files.length;i++) {\n        const file = files[i];\n        if(supportedFilesTypes.indexOf(file.type) > -1) {\n          const reader = new FileReader();\n          reader.onload = e => addImage(e.target.result);\n          reader.readAsDataURL(file);\n        }\n      }\n    }\n    else {\n      alert('수정 모드에서만 이미지를 등록할 수 있습니다.');\n    }\n    event.preventDefault();\n  }\n  if(edit) {\n    return (\n      <div className=\"App\"\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDragOver={onDragOver}\n      onDrop={onDrop}>\n        <div className=\"topBar\">\n          <button className=\"edit\" onClick={toggleEdit}>완료</button>\n          <button className=\"remove\" onClick={onDeleteAll}>이미지 삭제</button>\n          <button className=\"download\" disabled style={{backgroundColor: '#717c7d'}}>다운로드</button>\n        </div>\n        <div className=\"frame\">\n          <img style={{marginTop:30, marginBottom:70}} width=\"100%\" src=\"http://ai.esmplus.com/jin465/assets/header.png\"/>\n            \n            <div style={{marginTop:60, marginBottom:100}}>\n            <input className=\"ItemName\" style={{width:\"560px\"}} onChange={onNameChange} value={itemName}/>\n              <div className='Title'\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropTitle}>\n                <div style={{ \n                  width:'100%', height:'100%'\n                , backgroundRepeat: 'no-repeat'\n                , backgroundPosition: 'center center'\n                , backgroundSize: 'cover'\n                , backgroundImage: `url(${title})`}}>\n                </div>\n              </div>\n                <div className=\"Option\">\n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      COLOR\n                    </div>\n                    <input className=\"option_val\" style={{width:\"400px\"}} onChange={onColorChange} value={itemColor}/>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      SIZE\n                    </div>\n                    <input className=\"option_val\" style={{width:\"400px\"}} onChange={onSizeChange} value={itemSize}/>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      FABRIC\n                    </div>\n                    <input className=\"option_val\" style={{width:\"400px\"}} onChange={onFabricChange} value={itemFabric}/>\n                  </div>\n  \n                </div>\n              \n              </div>\n              <div className=\"Images\"\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropImages}>\n                  {images.map(img => <img width=\"780px\" className=\"item\" src={img}/>)}\n              </div>\n              <img style={{marginTop:70, marginBottom:30}} width=\"100%\" src=\"http://ai.esmplus.com/jin465/assets/footer.png\"/>\n          </div>\n        </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"App\"\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDragOver={onDragOver}\n      onDrop={onDrop}>\n        <div className=\"topBar\">\n          <button className=\"edit\" onClick={toggleEdit}>수정</button>\n          <button className=\"remove\" disabled style={{backgroundColor: '#717c7d'}}>이미지 삭제</button>\n          <button className=\"download\" onClick={onDonwload}>다운로드</button>\n        </div>\n        <div className=\"frame\">\n          <img style={{marginTop:30, marginBottom:70}} width=\"100%\" src=\"http://ai.esmplus.com/jin465/assets/header.png\"/>\n            \n            <div style={{marginTop:60, marginBottom:100}}>\n              <div className=\"ItemName\">\n                {itemName}\n              </div>\n              <div className='Title'\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropTitle}>\n                <div style={{ \n                  width:'100%', height:'100%'\n                , backgroundRepeat: 'no-repeat'\n                , backgroundPosition: 'center center'\n                , backgroundSize: 'cover'\n                , backgroundImage: `url(${title})`}}>\n                </div>\n              </div>\n                <div className=\"Option\">\n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      COLOR\n                    </div>\n                    <div className=\"option_val\">\n                      {itemColor}\n                    </div>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      SIZE\n                    </div>\n                    <div className=\"option_val\">\n                      {itemSize}\n                    </div>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      FABRIC\n                    </div>\n                    <div className=\"option_val\">\n                      {itemFabric}\n                    </div>\n                  </div>\n  \n                </div>\n              \n              </div>\n              <div className=\"Images\"\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropImages}>\n                  {images.map(img => <img width=\"780px\" className=\"item\" src={img}/>)}\n              </div>\n              <img style={{marginTop:70, marginBottom:30}} width=\"100%\" src=\"http://ai.esmplus.com/jin465/assets/footer.png\"/>\n          </div>\n        </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}