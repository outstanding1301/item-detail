{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","edit","updateEdit","header","setHeader","footer","setFooter","title","setTitle","images","setImages","itemName","setItemName","itemColor","setItemColor","itemSize","setItemSize","itemFabric","setItemFabric","toggleEdit","onDonwload","a","window","scrollTo","html2canvas","document","getElementsByClassName","allowTaint","useCORS","letterRendering","scrollX","scrollY","scale","canvas","img","toDataURL","element","createElement","href","download","body","appendChild","click","addImage","imgs","onDragEnter","event","preventDefault","onDragLeave","onDragOver","onDrop","onDropHeader","file","dataTransfer","files","indexOf","type","reader","FileReader","onload","e","target","result","readAsDataURL","alert","onDropTitle","onDropFooter","readFileAsDataURL","Promise","resolve","fileReader","result_base64","onDropImages","supportedFilesTypes","_files","slice","call","sort","b","Number","isInteger","name","localeCompare","i","length","className","onClick","disabled","style","backgroundColor","marginTop","marginBottom","width","src","placeholder","onChange","value","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","map","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1abb9718.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport html2canvas from 'html2canvas';\nimport './App.css';\n\nfunction App() {\n\n  const [edit, updateEdit] = useState(true);\n\n  const [header, setHeader] = useState('http://ai.esmplus.com/jin465/assets/header.png');\n  const [footer, setFooter] = useState('http://ai.esmplus.com/jin465/assets/footer.png');\n  const [title, setTitle] = useState(null);\n  const [images, setImages] = useState([]);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemColor, setItemColor] = useState(\"\");\n  const [itemSize, setItemSize] = useState(\"\");\n  const [itemFabric, setItemFabric] = useState(\"면 혼방\");\n\n  const toggleEdit = () => {\n    updateEdit(!edit);\n  }\n\n\n  const onNameChange = (e) => {\n    setItemName(e.target.value);\n  }\n  const onColorChange = (e) => {\n    setItemColor(e.target.value);\n  }\n  const onSizeChange = (e) => {\n    setItemSize(e.target.value);\n  }\n  const onFabricChange = (e) => {\n    setItemFabric(e.target.value);\n  }\n\n  const onDeleteAll = () => {\n    setImages([]);\n    setHeader('http://ai.esmplus.com/jin465/assets/header.png');\n  }\n\n  const onDonwload = async () => {\n    window.scrollTo(0,0);\n    const canvas = await html2canvas(document.getElementsByClassName('frame')[0]\n      , {\n        allowTaint: true\n        , useCORS: true\n        , letterRendering: 1\n        , scrollX: 0\n        , scrollY: 0\n        , scale: 1.0\n      })\n\n      const img = canvas.toDataURL('image/jpeg');\n\n      const element = document.createElement(\"a\");\n      element.href = img;\n      element.download = 'detail.jpg';\n      document.body.appendChild(element);\n      element.click();\n  }\n\n  const addImage = (img) => {\n    setImages(imgs => [...imgs, img])\n  }\n\n  const onDragEnter = (event) => {\n    event.preventDefault();\n  }\n\n  const onDragLeave = (event) => {\n    event.preventDefault();\n  }\n\n  const onDragOver = (event) => {\n    event.preventDefault();\n  }\n  \n  const onDrop = (event) => {\n    event.preventDefault();\n  }\n\n  const onDropHeader = (event) => {\n    if(edit) {\n      const supportedFilesTypes = ['image/jpeg', 'image/png'];\n      const files = event.dataTransfer.files;\n      const file = files[0];\n      if(supportedFilesTypes.indexOf(file.type) > -1) {\n        const reader = new FileReader();\n        reader.onload = e => setHeader(e.target.result);\n        reader.readAsDataURL(file);\n      }\n    }\n    else {\n      alert('수정 모드에서만 이미지를 등록할 수 있습니다.');\n    }\n    event.preventDefault();\n  }\n\n  const onDropTitle = (event) => {\n    if(edit) {\n      const supportedFilesTypes = ['image/jpeg', 'image/png'];\n      const files = event.dataTransfer.files;\n      const file = files[0];\n      if(supportedFilesTypes.indexOf(file.type) > -1) {\n        const reader = new FileReader();\n        reader.onload = e => setTitle(e.target.result);\n        reader.readAsDataURL(file);\n      }\n    }\n    else {\n      alert('수정 모드에서만 이미지를 등록할 수 있습니다.');\n    }\n    event.preventDefault();\n  }\n\n  const onDropFooter = (event) => {\n    if(edit) {\n      const supportedFilesTypes = ['image/jpeg', 'image/png'];\n      const files = event.dataTransfer.files;\n      const file = files[0];\n      if(supportedFilesTypes.indexOf(file.type) > -1) {\n        const reader = new FileReader();\n        reader.onload = e => setFooter(e.target.result);\n        reader.readAsDataURL(file);\n      }\n    }\n    else {\n      alert('수정 모드에서만 이미지를 등록할 수 있습니다.');\n    }\n    event.preventDefault();\n  }\n\n  async function readFileAsDataURL(file) {\n    let result_base64 = await new Promise((resolve) => {\n        let fileReader = new FileReader();\n        fileReader.onload = (e) => resolve(fileReader.result);\n        fileReader.readAsDataURL(file);\n    });\n    return result_base64;\n}\n\n  const onDropImages = async (event) => {\n    if(edit) {\n      const supportedFilesTypes = ['image/jpeg', 'image/png'];\n      const _files = event.dataTransfer.files;\n      const files = [].slice.call(_files)\n      .sort((a,b) => {\n        if(Number.isInteger(a) && Number.isInteger(b)) {\n          return a - b;\n        }\n        return a.name.localeCompare(b.name);\n      });\n      \n      for (let i=0;i<files.length;i++) {\n        const file = files[i];\n        if(supportedFilesTypes.indexOf(file.type) > -1) {\n          // const reader = new FileReader();\n          // reader.onload = e => addImage(e.target.result);\n          const img = await readFileAsDataURL(file);\n          addImage(img);\n        }\n      }\n    }\n    else {\n      alert('수정 모드에서만 이미지를 등록할 수 있습니다.');\n    }\n    event.preventDefault();\n  }\n  if(edit) {\n    return (\n      <div className=\"App\"\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDragOver={onDragOver}\n      onDrop={onDrop}>\n        <div className=\"topBar\">\n          <button className=\"edit\" onClick={toggleEdit}>완료</button>\n          <button className=\"remove\" onClick={onDeleteAll}>이미지 삭제</button>\n          <button className=\"download\" disabled style={{backgroundColor: '#717c7d'}}>다운로드</button>\n        </div>\n        <div className=\"frame\">\n          <img \n          onDragEnter={onDragEnter}\n          onDragLeave={onDragLeave}\n          onDragOver={onDragOver}\n          onDrop={onDropHeader}\n          style={{marginTop:30, marginBottom:70}} width=\"100%\" src={header}/>\n            \n            <div style={{marginTop:60, marginBottom:100}}>\n            <input className=\"ItemName\" placeholder=\"상품명\" style={{width:\"560px\"}} onChange={onNameChange} value={itemName}/>\n              <div className='Title'\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropTitle}>\n                <div style={{ \n                  width:'100%', height:'100%'\n                , backgroundRepeat: 'no-repeat'\n                , backgroundPosition: 'center center'\n                , backgroundSize: 'cover'\n                , backgroundImage: `url(${title})`}}>\n                </div>\n              </div>\n                <div className=\"Option\">\n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      COLOR\n                    </div>\n                    <input className=\"option_val\" placeholder=\"색상\" style={{width:\"400px\"}} onChange={onColorChange} value={itemColor}/>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      SIZE\n                    </div>\n                    <input className=\"option_val\" placeholder=\"사이즈\" style={{width:\"400px\"}} onChange={onSizeChange} value={itemSize}/>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      FABRIC\n                    </div>\n                    <input className=\"option_val\" placeholder=\"소재\" style={{width:\"400px\"}} onChange={onFabricChange} value={itemFabric}/>\n                  </div>\n  \n                </div>\n              \n              </div>\n              <div className=\"Images\"\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropImages}\n                    style={{\n                      backgroundColor: '#ffd700de'\n                    }}>\n                  {images.map(img => <img width=\"740px\" className=\"item\" src={img}/>)}\n              </div>\n              <img onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropFooter} style={{marginTop:70, marginBottom:30}} width=\"100%\" src={footer}/>\n          </div>\n        </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"App\"\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDragOver={onDragOver}\n      onDrop={onDrop}>\n        <div className=\"topBar\">\n          <button className=\"edit\" onClick={toggleEdit}>수정</button>\n          <button className=\"remove\" disabled style={{backgroundColor: '#717c7d'}}>이미지 삭제</button>\n          <button className=\"download\" onClick={onDonwload}>다운로드</button>\n        </div>\n        <div className=\"frame\">\n          <img \n          onDragEnter={onDragEnter}\n          onDragLeave={onDragLeave}\n          onDragOver={onDragOver}\n          onDrop={onDropHeader}\n          style={{marginTop:30, marginBottom:70}} width=\"100%\" src={header}/>\n            \n            <div style={{marginTop:60, marginBottom:100}}>\n              <div className=\"ItemName\">\n                {itemName}\n              </div>\n              <div className='Title'\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropTitle}>\n                <div style={{ \n                  width:'100%', height:'100%'\n                , backgroundRepeat: 'no-repeat'\n                , backgroundPosition: 'center center'\n                , backgroundSize: 'cover'\n                , backgroundImage: `url(${title})`}}>\n                </div>\n              </div>\n                <div className=\"Option\">\n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      COLOR\n                    </div>\n                    <div className=\"option_val\">\n                      {itemColor}\n                    </div>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      SIZE\n                    </div>\n                    <div className=\"option_val\">\n                      {itemSize}\n                    </div>\n                  </div>\n  \n                  <div className=\"opt\">\n                    <div className=\"option_nm\">\n                      FABRIC\n                    </div>\n                    <div className=\"option_val\">\n                      {itemFabric}\n                    </div>\n                  </div>\n  \n                </div>\n              \n              </div>\n              <div className=\"Images\"\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropImages}>\n                  {images.map(img => <img width=\"740px\" className=\"item\" src={img}/>)}\n              </div>\n              <img onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDragOver={onDragOver}\n                    onDrop={onDropFooter} style={{marginTop:70, marginBottom:30}} width=\"100%\" src={footer}/>\n          </div>\n        </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}